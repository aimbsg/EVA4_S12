# -*- coding: utf-8 -*-
"""model_evaluator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EqY12NXdNNAn7B85qb4CNZ_6NKdHXxxW
"""

import matplotlib.pyplot as plt
import numpy as np
import torch
import torchvision

def show_misclassified_images(model, device, dataset, classes,number = 25):
  misclassified_images = []
  
  for images, labels in dataset:
            images, labels = images.to(device), labels.to(device)
            outputs = model(images)
            _, predicted = torch.max(outputs.data, 1)
            for i in range(len(labels)):
              if(len(misclassified_images)<number and predicted[i]!=labels[i]):
                misclassified_images.append([images[i],predicted[i],labels[i]])
            if(len(misclassified_images)>number):
              break
  return misclassified_images